apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: efk-ingress
  namespace: efk
  annotations:
    kubernetes.io/ingress.class: "internal-nginx"
spec:
  rules:
  # Kibana for logging
  - host: kibana4log.devk8s
    http:
      paths:
      - path: /
        backend:
          serviceName: kibana4log
          servicePort: 443
  # Cerebro for logging elasticsearch
  - host: cerebro4log.devk8s
    http:
      paths:
      - path: /
        backend:
          serviceName: cerebro4log
          servicePort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: metrics-ingress
  namespace: metrics
  annotations:
    kubernetes.io/ingress.class: "internal-nginx"
spec:
  rules:
  # Grafana for metrics
  - host: grafana.devk8s
    http:
      paths:
      - path: /
        backend:
          serviceName: monitor-grafana
          servicePort: 80
  # Prometheus for metrics
  - host: prometheus.devk8s
    http:
      paths:
      - path: /
        backend:
          serviceName: monitor-prometheus-operato-prometheus
          servicePort: 9090
  # Prometheus alert manager for metrics
  - host: alertmanager.devk8s
    http:
      paths:
      - path: /
        backend:
          serviceName: monitor-prometheus-operato-alertmanager
          servicePort: 9093

---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIWmpDQ0JrNmdBd0lCQWdJTUYzZlcrQk9yMGZ2TDZSZlpNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HWXhDekFKDQpCZ05WQkFZVEFrSkZNUmt3RndZRFZRUUtFeEJIYkc5aVlXeFRhV2R1SUc1MkxYTmhNVHd3T2dZRFZRUURFek5IDQpiRzlpWVd4VGFXZHVJRTl5WjJGdWFYcGhkR2x2YmlCV1lXeHBaR0YwYVc5dUlFTkJJQzBnVTBoQk1qVTJJQzBnDQpSekl3SGhjTk1UZ3dNVEE1TURjeU1ESTRXaGNOTVRrd016RTNNRGt3TXpBeldqQ0JsREVMTUFrR0ExVUVCaE1DDQpRMDR4RHpBTkJnTlZCQWdNQnVTNGl1YTF0ekVQTUEwR0ExVUVCd3dHNUxpSzVyVzNNUXN3Q1FZRFZRUUxEQUpKDQpWREUvTUQwR0ExVUVDZ3cyNUxpdDVadTk2SUdVNVpDSTU3MlI1N3VjNllDYTVMK2g1cHlKNlptUTVZV3M1WSs0DQo1TGlLNXJXMzViaUM1WWlHNVlXczVZKzRNUlV3RXdZRFZRUUREQXdxTGpFd01ERXdjMmd1WTI0d2dnRWlNQTBHDQpDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFk3OWFOOEQxek0xMHE0akxIaTFhUUR1YzRHR2kyDQpzZUJGSm5SR0JVN3d2VkJpOVI3TXBRcnR0OGhoUjM1RngvUGpCMkR4S2c1YXFEa3JzdmxPSDUraVJvbENQa3JnDQowclh2OGNLOThHcDdRaGpxc1FPVk41TjJ1SnBvQmZuL0J4N0xGYjR0L0VoaTQ0VEdZU0p6Um9qNnZnLzVmclpoDQp3a0NWMmhWbzBqdFdYRzVkM1BzcWk3YUNXaXROVTNDS29mTUU2dG1QRnhXTEZwQlFnUzVXQUswRTFtWk1qYThEDQpDSmg5eVBoeUFHS0JvRHlFdFhuT0dobUN6QitIdG5CdW02S1dyaXZIcy9uSWR4eDJBZGQ1L2hiVVhxM0ViWHpMDQorb2pyTmc4V1B4S3NqM3docGlSOEdlR1NaMFJBSkxiMWpmZks1SU5ZRnlnNGcwWklQaEV4c2prcEFnTUJBQUdqDQpnZ1BqTUlJRDN6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd2dhQUdDQ3NHQVFVRkJ3RUJCSUdUTUlHUU1FMEdDQ3NHDQpBUVVGQnpBQ2hrRm9kSFJ3T2k4dmMyVmpkWEpsTG1kc2IySmhiSE5wWjI0dVkyOXRMMk5oWTJWeWRDOW5jMjl5DQpaMkZ1YVhwaGRHbHZiblpoYkhOb1lUSm5Nbkl4TG1OeWREQS9CZ2dyQmdFRkJRY3dBWVl6YUhSMGNEb3ZMMjlqDQpjM0F5TG1kc2IySmhiSE5wWjI0dVkyOXRMMmR6YjNKbllXNXBlbUYwYVc5dWRtRnNjMmhoTW1jeU1GWUdBMVVkDQpJQVJQTUUwd1FRWUpLd1lCQkFHZ01nRVVNRFF3TWdZSUt3WUJCUVVIQWdFV0ptaDBkSEJ6T2k4dmQzZDNMbWRzDQpiMkpoYkhOcFoyNHVZMjl0TDNKbGNHOXphWFJ2Y25rdk1BZ0dCbWVCREFFQ0FqQUpCZ05WSFJNRUFqQUFNRWtHDQpBMVVkSHdSQ01FQXdQcUE4b0RxR09HaDBkSEE2THk5amNtd3VaMnh2WW1Gc2MybG5iaTVqYjIwdlozTXZaM052DQpjbWRoYm1sNllYUnBiMjUyWVd4emFHRXlaekl1WTNKc01DTUdBMVVkRVFRY01CcUNEQ291TVRBd01UQnphQzVqDQpib0lLTVRBd01UQnphQzVqYmpBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdIUVlEDQpWUjBPQkJZRUZJRWlFdHQ4QjFIREdyR2I2b0xYcUx6WVNqY0NNQjhHQTFVZEl3UVlNQmFBRkpiZVlmRzlIQllwDQpVeHpBekgwN2d3QkE1aHA4TUlJQjlnWUtLd1lCQkFIV2VRSUVBZ1NDQWVZRWdnSGlBZUFBZHdEZDZ4MHJlZzFQDQpwaUNMZ2EyQmFIQitMbzZkQWRWY2lJMDlFY1ROdHV5K3pBQUFBV0RaeXJwYUFBQUVBd0JJTUVZQ0lRQ0o1ZjBxDQorNFU3MDhnc2dPdVJ4TmRGNDFkTXdaTE11aE9GQXY5cXJleWZEQUloQU03cUhTV3kveWxLVHp5OGRrTDBKV081DQp1dkFQaHpmSGZvWk0vczRURGMwWEFIWUFwTGtKa0xRWVdCU0h1eE9pekdkd0NqdzFtQVQ1RzkrNDQzZk5Ec2dODQozQkFBQUFGZzJjcTZIZ0FBQkFNQVJ6QkZBaUVBNUhoTVQ5L2ltZHdNd1JVZ095ZFZGaVQ5aGtBajcyWjQyOHZ4DQpNUnZjWW04Q0lFVEJjOUhhYmtMbW1Uc0hzaFpYaXpySXZhMGtoN1lWNU5lN0NYUzgzb3QxQUhVQTdrdTl0M1hPDQpZTHJoUW1rZnErR2VacU1QZmwrd2N0aURBTVI3aVhxby9jc0FBQUZnMmNxNlp3QUFCQU1BUmpCRUFpQUY2a1BzDQpJWi9KWUFsaHFVU1BBVTFabXdCSjRydWNyU2V1Q0hNdjdVeVpPUUlnQlpwbmkvMWxhNkJLekNPWnBqRVdCeHgzDQpOeGc0Q3I4WnRUR0RVdWFNaUNZQWRnQldGQWFhTDlmQzdOUDE0YjFFc2o3SFJuYTV2SmtSWE1EdmxKaFYxb25RDQozUUFBQVdEWnlycXJBQUFFQXdCSE1FVUNJUURYUGs2YkdJcDhiYzJxaE56VGpxV3FUb2dYY1krTDhoZjdPdFd1DQpxdm81U3dJZ014YnRneUphMWNSVUlBRWR0Mkw0QnN1WXJtajNtcWtTZTQrWml6UkN5WjB3RFFZSktvWklodmNODQpBUUVMQlFBRGdnRUJBQTZ1blM5R3dXVVQzd2Zid0JyZ1BXa25sUCtZVUtiR2tYZTk4SHFqaFdranczU29BbXRSDQoxendsT0VaTlhvQ3U1dW1tK0pwSlhKUldxSU9td0N6ajFYVWNreDc2TE51S29Kd2x0QnBaUmVsUUhydU1nczF5DQp1a0Nyb2Y1a01NSkxmUUxKdkV1ZzhYa0o0UEphRXlLOVNKRlBvT3pZdmZOTTQyS3haeVhLdlFwakNzVEJsNnhODQpNU1NXbDRQVXhCRWdzK2pZdnNaU2N3dTY0UkcxR2k1MWMyN2NLeGtmV3dwMm0xSWV0bWVxRllNbXNPWWtuT2I4DQpYdjRWS0d3SWRTN1Q3VzJMSy9mZTR6SzgvK2c1QjV1ZHJsS2lDSW56OGhYWDBFYU1QNDI1RklkSGtnaC82RnptDQpFUGUvaDlyY29hY2hTb3h1ZU5LR0tkSkRCS1l0MjBqdGtmdz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQ0KTUlJRWFUQ0NBMUdnQXdJQkFnSUxCQUFBQUFBQlJFN3dRa2N3RFFZSktvWklodmNOQVFFTEJRQXdWekVMTUFrRw0KQTFVRUJoTUNRa1V4R1RBWEJnTlZCQW9URUVkc2IySmhiRk5wWjI0Z2JuWXRjMkV4RURBT0JnTlZCQXNUQjFKdg0KYjNRZ1EwRXhHekFaQmdOVkJBTVRFa2RzYjJKaGJGTnBaMjRnVW05dmRDQkRRVEFlRncweE5EQXlNakF4TURBdw0KTURCYUZ3MHlOREF5TWpBeE1EQXdNREJhTUdZeEN6QUpCZ05WQkFZVEFrSkZNUmt3RndZRFZRUUtFeEJIYkc5aQ0KWVd4VGFXZHVJRzUyTFhOaE1Ud3dPZ1lEVlFRREV6TkhiRzlpWVd4VGFXZHVJRTl5WjJGdWFYcGhkR2x2YmlCVw0KWVd4cFpHRjBhVzl1SUVOQklDMGdVMGhCTWpVMklDMGdSekl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQg0KRHdBd2dnRUtBb0lCQVFESERtdy9JNU4vekhDbG5TREREbE0vZnNCT3dwaEp5a2ZWSSs4RE5JVjB5S01DTGtaYw0KQzMzSmlKMVBpL0Q0bkd5TVZUWGJ2L0t6NnZ2alZ1ZEtSdGtUSXNvMjFadkJxT09XUTVQeURMem0rZWJvbWNoag0KU0hoL1Z6WnBHaGtkV3RIVWZjS2MxSC9oZ0JLdWV1cUk2bGZZeWdvS09oSkpvbUlaZWcwazl6ZnJ0SE9TZXdVag0KbXhLMXp1c3AzNlFVQXJrQnBkU21uRU5raU43NGZ2N2o5UjdsL3R5anFPUm1NZGxNSmVrWXVZbFpDYTdwblJ4dA0KTnc5S0hqVWdLT0t2MUNHTEFjUkZyVzRyWTZ1U2EyRUtUU0R0YzdwOHp2NFd0ZHVmZ1BEV2kyelpDSGxLVDNobA0KMnBLOHZqWDVzOFQ1SjRCTy81WlM1Z0lnNFFkejZWMHJ2Ykx4QWdNQkFBR2pnZ0VsTUlJQklUQU9CZ05WSFE4Qg0KQWY4RUJBTUNBUVl3RWdZRFZSMFRBUUgvQkFnd0JnRUIvd0lCQURBZEJnTlZIUTRFRmdRVWx0NWg4YjBjRmlsVA0KSE1ETWZUdURBRURtR253d1J3WURWUjBnQkVBd1BqQThCZ1JWSFNBQU1EUXdNZ1lJS3dZQkJRVUhBZ0VXSm1oMA0KZEhCek9pOHZkM2QzTG1kc2IySmhiSE5wWjI0dVkyOXRMM0psY0c5emFYUnZjbmt2TURNR0ExVWRId1FzTUNvdw0KS0tBbW9DU0dJbWgwZEhBNkx5OWpjbXd1WjJ4dlltRnNjMmxuYmk1dVpYUXZjbTl2ZEM1amNtd3dQUVlJS3dZQg0KQlFVSEFRRUVNVEF2TUMwR0NDc0dBUVVGQnpBQmhpRm9kSFJ3T2k4dmIyTnpjQzVuYkc5aVlXeHphV2R1TG1Odg0KYlM5eWIyOTBjakV3SHdZRFZSMGpCQmd3Rm9BVVlIdG1Ha1VObDhxSlVDOTlCTTAwcVAvOC9Vc3dEUVlKS29aSQ0KaHZjTkFRRUxCUUFEZ2dFQkFFWXE3bDY5cmdGZ056RVJobkYwdGtaSnlCQVcvaTlpSXhlckg0ZjRndTNLM3c0cw0KMzJSMWp1VVljcWVNT292SnJLVjNVUGZ2bnFUZ29JOFVWNk1xWCt4K2JSRG11bzJ3Q0lkMkRreXkyVkc3RVFMeQ0KWE4wY3ZmTlZsZy9VQnNEODRpT0tKSERUdS9CNUdxZGhjSU9LcndiRklOaWhZOUJzcms4eTE2NThHRVYxQlNsMw0KMzBKQVpHU0d2aXAyQ1RGdkhTVDBtZENGL3ZJaENQbkc5dkhRV2UzV1Zqd0lLQU5udXZENThaQVdSNjVuNXJ5QQ0KU09sQ2RqU1hWV2trRG9QV29DMjA5Zk41aWtrb2RCcEJvY0xUSklnMU1HQ1VGN1RoQkNJeFBUc3ZGd2F5dUoyRw0KSzFwcDc0UDFTOFNxdENyNGZLR3hoWlNNOUF5SERQU3NRUGhaU1pnPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQ0KTUlJRXBnSUJBQUtDQVFFQTJPL1dqZkE5Y3pOZEt1SXl4NHRXa0E3bk9CaG90ckhnUlNaMFJnVk84TDFRWXZVZQ0KektVSzdiZklZVWQrUmNmejR3ZGc4U29PV3FnNUs3TDVUaCtmb2thSlFqNUs0TksxNy9IQ3ZmQnFlMElZNnJFRA0KbFRlVGRyaWFhQVg1L3djZXl4VytMZnhJWXVPRXhtRWljMGFJK3I0UCtYNjJZY0pBbGRvVmFOSTdWbHh1WGR6Nw0KS291Mmdsb3JUVk53aXFIekJPclpqeGNWaXhhUVVJRXVWZ0N0Qk5abVRJMnZBd2lZZmNqNGNnQmlnYUE4aExWNQ0KemhvWmdzd2ZoN1p3YnB1aWxxNHJ4N1A1eUhjY2RnSFhlZjRXMUY2dHhHMTh5L3FJNnpZUEZqOFNySTk4SWFZaw0KZkJuaGttZEVRQ1MyOVkzM3l1U0RXQmNvT0lOR1NENFJNYkk1S1FJREFRQUJBb0lCQVFDWlViaURqRjBCeERWKw0KajJ0d0dBeFB1QmkyVHBvRE5PZmFOM2xKMjRxVkhsZG4rUEdSbEx1S2txOHVBWWMrN2poeUpjN2Y0dWRPTDBKbw0Kbmc4UXBjeit0WGRndUFIWHIxUWlodTBwckhhMU1sdkYwdUZEWG9uOENEQW9nTURVKzBWS0pzM0lWbHNhZU01bw0KSGxKb3dsc2hTNTZpcUdsaDRoWWZVb2g3RXNvWkYrQm9kWS8rTU15WTNtSUR5ZEw5UkJ3OGwrQU13UzdER0JZbg0KS3lKejhiRlhhamZRZWl5djdlcWNGS1M3VnpXdW1JNnQ2Qnp3RFA5MjNVY2NJSFFSS0NQanZma3k1dzZkRktJcg0Kc3JhSURYSStQWndKd3dnMEVZRWRIY2tvWStEd2NxcW9nU3ExT3JBaGVGWWQvSEU1NUoyS25XclNlNE5sWXVxNw0KRVhoRjdXd1pBb0dCQVAzZTNMRStvbTR4K2xMemhNNngyZC9vSlpTWUZUdnpIcktjVFdERWtuU1FJOWc1eExSRA0KcUN0b21xZEFZbktjZ25zUHBBMW5VWWs0VEV2OGJvdjRiZnBpVWduK3QwazhMU3YzUzExdFBQcENsQkdMZUlYdQ0KeEIyeGYvN0hBR0pFdm4zRzBXN0UxRUJPN00zOU9tdVhWQml2Ymo2OUVKOU8vbUdpQ0hWdnFuL2ZBb0dCQU5yQg0KcXdiUVh3OEYxOEVVeHBTaG1BTzRwMXFKOFFSeTBuRDRPNU41SjdYOWZrNlFiNmdWeFlNYU5CMjBURURZT2RZLw0KVWEwQUVlTTY1ZU5qUklmclo3SW5YMGIwZGdzWE9FcFJiaitnQnZNQ0ZEZW9FT01QYnI1YitVSnpHUysrK3IvaA0Kei81K1RZeFRqek9hbDdRQTZLN1JCNnozbERiL04yZGluT3hFaGtmM0FvR0JBSWJBSG1BdUlNVmczYi9kNWlaWQ0KSEk5T2gzUUI3WE51cm1LYnVDNmU2Q1hheEV2bkRkT28vY0JjdTRuL0VNSkk5TEVoTWpDeklJSTNVYmdiZXducw0KaVdPWGdIZ3hyVlBBRHpJQkJ3M0dCOUhHT1JXKzgvQVROaUdVcjUycVB6ZnB5VHExcDBDbVZRcjFXWmhVeXdlRQ0Kd1d5QTRZR0hsU1VhSnNmbjI1bUo5ZlA5QW9HQkFKbURoV2pQdTVYSVRPTnpsL1BmL3RURnRiUEV6NzJHY29YUw0KdmNROUpwQUJaNnpza1Y3TWdJSURWb1Z0N0lFby9GV01zOTJMQ2dLRFo2YU9HQjZtSld3UlV6eHcrNUhHNXJySQ0Kc0d5MytZaDVjZ1NvemNqNklJWTM5eEVad3BnT0Z0dW5OUlpzUGpGMnhpeTVsVEk5M1F3cEpwRE1ZVmZDL0hkeA0KN1p1a2J2TjdBb0dCQUtZWEVGZVRKRkhKYUhwU1R5b2xoZjI2MUI1SDIwZ0FKVmJaL1V2clV1Q2JVTWhhalZuQg0KTmJac0E1bEZMRWpwNTFBTE9uamxqb0daamhYQkIxSmN6bGtkTFg1b2xBYlBPWU1tUnYxQnlZbG15a1BlUG5xZA0KdVZldkhYdzgrQm9pa1BhSFExaUVtNlFDZ08zYjE5ZDBXTEk2UnJLei92Smh6L2tpczcxRnJ1czQNCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tDQo=
kind: Secret
metadata:
  name: universal-10010sh-cn-tls
  namespace: rook-ceph
type: Opaque

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: rook-ceph-ingress
  namespace: rook-ceph
  annotations:
    kubernetes.io/ingress.class: "internal-nginx"
    # nginx.org/ssl-services: "rook-ceph-mgr-dashboard"    
    # ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/rewrite-target: "/"    
spec:
  tls:
  - hosts:
    - devk8s.10010sh.cn
    secretName: universal-10010sh-cn-tls
  rules:
  - host: devk8s.10010sh.cn
    http:
      paths:
      - path: /cephdashboard
        backend:
          serviceName: rook-ceph-mgr-dashboard
          servicePort: 8443

---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIWmpDQ0JrNmdBd0lCQWdJTUYzZlcrQk9yMGZ2TDZSZlpNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1HWXhDekFKDQpCZ05WQkFZVEFrSkZNUmt3RndZRFZRUUtFeEJIYkc5aVlXeFRhV2R1SUc1MkxYTmhNVHd3T2dZRFZRUURFek5IDQpiRzlpWVd4VGFXZHVJRTl5WjJGdWFYcGhkR2x2YmlCV1lXeHBaR0YwYVc5dUlFTkJJQzBnVTBoQk1qVTJJQzBnDQpSekl3SGhjTk1UZ3dNVEE1TURjeU1ESTRXaGNOTVRrd016RTNNRGt3TXpBeldqQ0JsREVMTUFrR0ExVUVCaE1DDQpRMDR4RHpBTkJnTlZCQWdNQnVTNGl1YTF0ekVQTUEwR0ExVUVCd3dHNUxpSzVyVzNNUXN3Q1FZRFZRUUxEQUpKDQpWREUvTUQwR0ExVUVDZ3cyNUxpdDVadTk2SUdVNVpDSTU3MlI1N3VjNllDYTVMK2g1cHlKNlptUTVZV3M1WSs0DQo1TGlLNXJXMzViaUM1WWlHNVlXczVZKzRNUlV3RXdZRFZRUUREQXdxTGpFd01ERXdjMmd1WTI0d2dnRWlNQTBHDQpDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFk3OWFOOEQxek0xMHE0akxIaTFhUUR1YzRHR2kyDQpzZUJGSm5SR0JVN3d2VkJpOVI3TXBRcnR0OGhoUjM1RngvUGpCMkR4S2c1YXFEa3JzdmxPSDUraVJvbENQa3JnDQowclh2OGNLOThHcDdRaGpxc1FPVk41TjJ1SnBvQmZuL0J4N0xGYjR0L0VoaTQ0VEdZU0p6Um9qNnZnLzVmclpoDQp3a0NWMmhWbzBqdFdYRzVkM1BzcWk3YUNXaXROVTNDS29mTUU2dG1QRnhXTEZwQlFnUzVXQUswRTFtWk1qYThEDQpDSmg5eVBoeUFHS0JvRHlFdFhuT0dobUN6QitIdG5CdW02S1dyaXZIcy9uSWR4eDJBZGQ1L2hiVVhxM0ViWHpMDQorb2pyTmc4V1B4S3NqM3docGlSOEdlR1NaMFJBSkxiMWpmZks1SU5ZRnlnNGcwWklQaEV4c2prcEFnTUJBQUdqDQpnZ1BqTUlJRDN6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd2dhQUdDQ3NHQVFVRkJ3RUJCSUdUTUlHUU1FMEdDQ3NHDQpBUVVGQnpBQ2hrRm9kSFJ3T2k4dmMyVmpkWEpsTG1kc2IySmhiSE5wWjI0dVkyOXRMMk5oWTJWeWRDOW5jMjl5DQpaMkZ1YVhwaGRHbHZiblpoYkhOb1lUSm5Nbkl4TG1OeWREQS9CZ2dyQmdFRkJRY3dBWVl6YUhSMGNEb3ZMMjlqDQpjM0F5TG1kc2IySmhiSE5wWjI0dVkyOXRMMmR6YjNKbllXNXBlbUYwYVc5dWRtRnNjMmhoTW1jeU1GWUdBMVVkDQpJQVJQTUUwd1FRWUpLd1lCQkFHZ01nRVVNRFF3TWdZSUt3WUJCUVVIQWdFV0ptaDBkSEJ6T2k4dmQzZDNMbWRzDQpiMkpoYkhOcFoyNHVZMjl0TDNKbGNHOXphWFJ2Y25rdk1BZ0dCbWVCREFFQ0FqQUpCZ05WSFJNRUFqQUFNRWtHDQpBMVVkSHdSQ01FQXdQcUE4b0RxR09HaDBkSEE2THk5amNtd3VaMnh2WW1Gc2MybG5iaTVqYjIwdlozTXZaM052DQpjbWRoYm1sNllYUnBiMjUyWVd4emFHRXlaekl1WTNKc01DTUdBMVVkRVFRY01CcUNEQ291TVRBd01UQnphQzVqDQpib0lLTVRBd01UQnphQzVqYmpBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdIUVlEDQpWUjBPQkJZRUZJRWlFdHQ4QjFIREdyR2I2b0xYcUx6WVNqY0NNQjhHQTFVZEl3UVlNQmFBRkpiZVlmRzlIQllwDQpVeHpBekgwN2d3QkE1aHA4TUlJQjlnWUtLd1lCQkFIV2VRSUVBZ1NDQWVZRWdnSGlBZUFBZHdEZDZ4MHJlZzFQDQpwaUNMZ2EyQmFIQitMbzZkQWRWY2lJMDlFY1ROdHV5K3pBQUFBV0RaeXJwYUFBQUVBd0JJTUVZQ0lRQ0o1ZjBxDQorNFU3MDhnc2dPdVJ4TmRGNDFkTXdaTE11aE9GQXY5cXJleWZEQUloQU03cUhTV3kveWxLVHp5OGRrTDBKV081DQp1dkFQaHpmSGZvWk0vczRURGMwWEFIWUFwTGtKa0xRWVdCU0h1eE9pekdkd0NqdzFtQVQ1RzkrNDQzZk5Ec2dODQozQkFBQUFGZzJjcTZIZ0FBQkFNQVJ6QkZBaUVBNUhoTVQ5L2ltZHdNd1JVZ095ZFZGaVQ5aGtBajcyWjQyOHZ4DQpNUnZjWW04Q0lFVEJjOUhhYmtMbW1Uc0hzaFpYaXpySXZhMGtoN1lWNU5lN0NYUzgzb3QxQUhVQTdrdTl0M1hPDQpZTHJoUW1rZnErR2VacU1QZmwrd2N0aURBTVI3aVhxby9jc0FBQUZnMmNxNlp3QUFCQU1BUmpCRUFpQUY2a1BzDQpJWi9KWUFsaHFVU1BBVTFabXdCSjRydWNyU2V1Q0hNdjdVeVpPUUlnQlpwbmkvMWxhNkJLekNPWnBqRVdCeHgzDQpOeGc0Q3I4WnRUR0RVdWFNaUNZQWRnQldGQWFhTDlmQzdOUDE0YjFFc2o3SFJuYTV2SmtSWE1EdmxKaFYxb25RDQozUUFBQVdEWnlycXJBQUFFQXdCSE1FVUNJUURYUGs2YkdJcDhiYzJxaE56VGpxV3FUb2dYY1krTDhoZjdPdFd1DQpxdm81U3dJZ014YnRneUphMWNSVUlBRWR0Mkw0QnN1WXJtajNtcWtTZTQrWml6UkN5WjB3RFFZSktvWklodmNODQpBUUVMQlFBRGdnRUJBQTZ1blM5R3dXVVQzd2Zid0JyZ1BXa25sUCtZVUtiR2tYZTk4SHFqaFdranczU29BbXRSDQoxendsT0VaTlhvQ3U1dW1tK0pwSlhKUldxSU9td0N6ajFYVWNreDc2TE51S29Kd2x0QnBaUmVsUUhydU1nczF5DQp1a0Nyb2Y1a01NSkxmUUxKdkV1ZzhYa0o0UEphRXlLOVNKRlBvT3pZdmZOTTQyS3haeVhLdlFwakNzVEJsNnhODQpNU1NXbDRQVXhCRWdzK2pZdnNaU2N3dTY0UkcxR2k1MWMyN2NLeGtmV3dwMm0xSWV0bWVxRllNbXNPWWtuT2I4DQpYdjRWS0d3SWRTN1Q3VzJMSy9mZTR6SzgvK2c1QjV1ZHJsS2lDSW56OGhYWDBFYU1QNDI1RklkSGtnaC82RnptDQpFUGUvaDlyY29hY2hTb3h1ZU5LR0tkSkRCS1l0MjBqdGtmdz0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQ0KTUlJRWFUQ0NBMUdnQXdJQkFnSUxCQUFBQUFBQlJFN3dRa2N3RFFZSktvWklodmNOQVFFTEJRQXdWekVMTUFrRw0KQTFVRUJoTUNRa1V4R1RBWEJnTlZCQW9URUVkc2IySmhiRk5wWjI0Z2JuWXRjMkV4RURBT0JnTlZCQXNUQjFKdg0KYjNRZ1EwRXhHekFaQmdOVkJBTVRFa2RzYjJKaGJGTnBaMjRnVW05dmRDQkRRVEFlRncweE5EQXlNakF4TURBdw0KTURCYUZ3MHlOREF5TWpBeE1EQXdNREJhTUdZeEN6QUpCZ05WQkFZVEFrSkZNUmt3RndZRFZRUUtFeEJIYkc5aQ0KWVd4VGFXZHVJRzUyTFhOaE1Ud3dPZ1lEVlFRREV6TkhiRzlpWVd4VGFXZHVJRTl5WjJGdWFYcGhkR2x2YmlCVw0KWVd4cFpHRjBhVzl1SUVOQklDMGdVMGhCTWpVMklDMGdSekl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQg0KRHdBd2dnRUtBb0lCQVFESERtdy9JNU4vekhDbG5TREREbE0vZnNCT3dwaEp5a2ZWSSs4RE5JVjB5S01DTGtaYw0KQzMzSmlKMVBpL0Q0bkd5TVZUWGJ2L0t6NnZ2alZ1ZEtSdGtUSXNvMjFadkJxT09XUTVQeURMem0rZWJvbWNoag0KU0hoL1Z6WnBHaGtkV3RIVWZjS2MxSC9oZ0JLdWV1cUk2bGZZeWdvS09oSkpvbUlaZWcwazl6ZnJ0SE9TZXdVag0KbXhLMXp1c3AzNlFVQXJrQnBkU21uRU5raU43NGZ2N2o5UjdsL3R5anFPUm1NZGxNSmVrWXVZbFpDYTdwblJ4dA0KTnc5S0hqVWdLT0t2MUNHTEFjUkZyVzRyWTZ1U2EyRUtUU0R0YzdwOHp2NFd0ZHVmZ1BEV2kyelpDSGxLVDNobA0KMnBLOHZqWDVzOFQ1SjRCTy81WlM1Z0lnNFFkejZWMHJ2Ykx4QWdNQkFBR2pnZ0VsTUlJQklUQU9CZ05WSFE4Qg0KQWY4RUJBTUNBUVl3RWdZRFZSMFRBUUgvQkFnd0JnRUIvd0lCQURBZEJnTlZIUTRFRmdRVWx0NWg4YjBjRmlsVA0KSE1ETWZUdURBRURtR253d1J3WURWUjBnQkVBd1BqQThCZ1JWSFNBQU1EUXdNZ1lJS3dZQkJRVUhBZ0VXSm1oMA0KZEhCek9pOHZkM2QzTG1kc2IySmhiSE5wWjI0dVkyOXRMM0psY0c5emFYUnZjbmt2TURNR0ExVWRId1FzTUNvdw0KS0tBbW9DU0dJbWgwZEhBNkx5OWpjbXd1WjJ4dlltRnNjMmxuYmk1dVpYUXZjbTl2ZEM1amNtd3dQUVlJS3dZQg0KQlFVSEFRRUVNVEF2TUMwR0NDc0dBUVVGQnpBQmhpRm9kSFJ3T2k4dmIyTnpjQzVuYkc5aVlXeHphV2R1TG1Odg0KYlM5eWIyOTBjakV3SHdZRFZSMGpCQmd3Rm9BVVlIdG1Ha1VObDhxSlVDOTlCTTAwcVAvOC9Vc3dEUVlKS29aSQ0KaHZjTkFRRUxCUUFEZ2dFQkFFWXE3bDY5cmdGZ056RVJobkYwdGtaSnlCQVcvaTlpSXhlckg0ZjRndTNLM3c0cw0KMzJSMWp1VVljcWVNT292SnJLVjNVUGZ2bnFUZ29JOFVWNk1xWCt4K2JSRG11bzJ3Q0lkMkRreXkyVkc3RVFMeQ0KWE4wY3ZmTlZsZy9VQnNEODRpT0tKSERUdS9CNUdxZGhjSU9LcndiRklOaWhZOUJzcms4eTE2NThHRVYxQlNsMw0KMzBKQVpHU0d2aXAyQ1RGdkhTVDBtZENGL3ZJaENQbkc5dkhRV2UzV1Zqd0lLQU5udXZENThaQVdSNjVuNXJ5QQ0KU09sQ2RqU1hWV2trRG9QV29DMjA5Zk41aWtrb2RCcEJvY0xUSklnMU1HQ1VGN1RoQkNJeFBUc3ZGd2F5dUoyRw0KSzFwcDc0UDFTOFNxdENyNGZLR3hoWlNNOUF5SERQU3NRUGhaU1pnPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQ0KTUlJRXBnSUJBQUtDQVFFQTJPL1dqZkE5Y3pOZEt1SXl4NHRXa0E3bk9CaG90ckhnUlNaMFJnVk84TDFRWXZVZQ0KektVSzdiZklZVWQrUmNmejR3ZGc4U29PV3FnNUs3TDVUaCtmb2thSlFqNUs0TksxNy9IQ3ZmQnFlMElZNnJFRA0KbFRlVGRyaWFhQVg1L3djZXl4VytMZnhJWXVPRXhtRWljMGFJK3I0UCtYNjJZY0pBbGRvVmFOSTdWbHh1WGR6Nw0KS291Mmdsb3JUVk53aXFIekJPclpqeGNWaXhhUVVJRXVWZ0N0Qk5abVRJMnZBd2lZZmNqNGNnQmlnYUE4aExWNQ0KemhvWmdzd2ZoN1p3YnB1aWxxNHJ4N1A1eUhjY2RnSFhlZjRXMUY2dHhHMTh5L3FJNnpZUEZqOFNySTk4SWFZaw0KZkJuaGttZEVRQ1MyOVkzM3l1U0RXQmNvT0lOR1NENFJNYkk1S1FJREFRQUJBb0lCQVFDWlViaURqRjBCeERWKw0KajJ0d0dBeFB1QmkyVHBvRE5PZmFOM2xKMjRxVkhsZG4rUEdSbEx1S2txOHVBWWMrN2poeUpjN2Y0dWRPTDBKbw0Kbmc4UXBjeit0WGRndUFIWHIxUWlodTBwckhhMU1sdkYwdUZEWG9uOENEQW9nTURVKzBWS0pzM0lWbHNhZU01bw0KSGxKb3dsc2hTNTZpcUdsaDRoWWZVb2g3RXNvWkYrQm9kWS8rTU15WTNtSUR5ZEw5UkJ3OGwrQU13UzdER0JZbg0KS3lKejhiRlhhamZRZWl5djdlcWNGS1M3VnpXdW1JNnQ2Qnp3RFA5MjNVY2NJSFFSS0NQanZma3k1dzZkRktJcg0Kc3JhSURYSStQWndKd3dnMEVZRWRIY2tvWStEd2NxcW9nU3ExT3JBaGVGWWQvSEU1NUoyS25XclNlNE5sWXVxNw0KRVhoRjdXd1pBb0dCQVAzZTNMRStvbTR4K2xMemhNNngyZC9vSlpTWUZUdnpIcktjVFdERWtuU1FJOWc1eExSRA0KcUN0b21xZEFZbktjZ25zUHBBMW5VWWs0VEV2OGJvdjRiZnBpVWduK3QwazhMU3YzUzExdFBQcENsQkdMZUlYdQ0KeEIyeGYvN0hBR0pFdm4zRzBXN0UxRUJPN00zOU9tdVhWQml2Ymo2OUVKOU8vbUdpQ0hWdnFuL2ZBb0dCQU5yQg0KcXdiUVh3OEYxOEVVeHBTaG1BTzRwMXFKOFFSeTBuRDRPNU41SjdYOWZrNlFiNmdWeFlNYU5CMjBURURZT2RZLw0KVWEwQUVlTTY1ZU5qUklmclo3SW5YMGIwZGdzWE9FcFJiaitnQnZNQ0ZEZW9FT01QYnI1YitVSnpHUysrK3IvaA0Kei81K1RZeFRqek9hbDdRQTZLN1JCNnozbERiL04yZGluT3hFaGtmM0FvR0JBSWJBSG1BdUlNVmczYi9kNWlaWQ0KSEk5T2gzUUI3WE51cm1LYnVDNmU2Q1hheEV2bkRkT28vY0JjdTRuL0VNSkk5TEVoTWpDeklJSTNVYmdiZXducw0KaVdPWGdIZ3hyVlBBRHpJQkJ3M0dCOUhHT1JXKzgvQVROaUdVcjUycVB6ZnB5VHExcDBDbVZRcjFXWmhVeXdlRQ0Kd1d5QTRZR0hsU1VhSnNmbjI1bUo5ZlA5QW9HQkFKbURoV2pQdTVYSVRPTnpsL1BmL3RURnRiUEV6NzJHY29YUw0KdmNROUpwQUJaNnpza1Y3TWdJSURWb1Z0N0lFby9GV01zOTJMQ2dLRFo2YU9HQjZtSld3UlV6eHcrNUhHNXJySQ0Kc0d5MytZaDVjZ1NvemNqNklJWTM5eEVad3BnT0Z0dW5OUlpzUGpGMnhpeTVsVEk5M1F3cEpwRE1ZVmZDL0hkeA0KN1p1a2J2TjdBb0dCQUtZWEVGZVRKRkhKYUhwU1R5b2xoZjI2MUI1SDIwZ0FKVmJaL1V2clV1Q2JVTWhhalZuQg0KTmJac0E1bEZMRWpwNTFBTE9uamxqb0daamhYQkIxSmN6bGtkTFg1b2xBYlBPWU1tUnYxQnlZbG15a1BlUG5xZA0KdVZldkhYdzgrQm9pa1BhSFExaUVtNlFDZ08zYjE5ZDBXTEk2UnJLei92Smh6L2tpczcxRnJ1czQNCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tDQo=
kind: Secret
metadata:
  name: universal-10010sh-cn-tls
  namespace: kube-system
type: Opaque

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kubernetes-dashboard-ingress
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: "internal-nginx" 
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    # nginx.org/ssl-services: "k8sviewer-kubernetes-dashboard"
    # ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  tls:
  - hosts:
    - devk8s.10010sh.cn
    secretName: universal-10010sh-cn-tls
  rules:
  - host: devk8s.10010sh.cn
    http:
      paths:
      - path: /dashboard
        backend:
          serviceName: k8sviewer-kubernetes-dashboard
          servicePort: 443